# Generated by confd {{datetime}}
router id {{getenv "IP"}};
log "/var/log/calico/bird.log" all;

filter calico_pools {
{{range gets "/calico/ipam/v4/pool/*"}}
    if ( net ~ {{.Value}} ) then {
        accept;
    }
{{end}}
    reject;
}

# Configure synchronization between routing tables and kernel.
protocol kernel {
  learn;          # Learn all alien routes from the kernel
  persist;        # Don't remove routes on bird shutdown
  scan time 2;    # Scan kernel routing table every 2 seconds
  import all;
  device routes;
  export all;     # Default is export none
}

# Watch interface up/down events.
protocol device {
  scan time 2;    # Scan interfaces every 2 seconds
}

protocol direct {
   debug all;
   interface "eth*", "em*", "ens*";
}

{{if ls "/calico/config/bgp_peers"}}
# Peer with configured neighbors
{{range gets "/calico/config/bgp_peers/*"}}
# For peer {{.Value}}
protocol bgp {
  debug all;
  description "Connection to BGP peer";
  local as 64511;
  neighbor {{.Value}} as 64511;
  multihop;
  gateway recursive; # This should be the default, but just in case.
  import filter calico_pools;
  export filter calico_pools;
  next hop self;    # Disable next hop processing and always advertise our
                    # local address as nexthop
  source address {{getenv "IP"}};  # The local address we use for the TCP connection
}
{{end}}
{{else}}
# Peer with all neighbours
{{range gets "/calico/host/*/bird_ip"}}
# For peer {{.Key}} {{if eq .Value (getenv "IP") }}
# Skipping ourselves ({{getenv "IP"}}) {{else}}
protocol bgp {
  debug all;
  description "Connection to BGP peer";
  local as 64511;
  neighbor {{.Value}} as 64511;
  multihop;
  gateway recursive; # This should be the default, but just in case.
  import filter calico_pools;
  export filter calico_pools;
  next hop self;    # Disable next hop processing and always advertise our
                    # local address as nexthop
  source address {{getenv "IP"}};  # The local address we use for the TCP connection
}
{{end}}{{end}}
{{end}}